#shop apis
extend type Query {
  shop(shopId: ID!): Shop!
  shops(userId: ID!): [Shop!]!
  shopImages(shopId: ID!): [Image!]!
}

extend type Mutation {
  createShop(shop: ShopInput!): CreateShopResponse
  updateShop(shop: ShopUpdateInput!): UpdateShopResponse
  deleteShop(shopId: ID!): DeleteShopResponse

  addShopImages(shopId: ID!, images: [ImageInput!]!): AddShopImagesResponse
  deleteShopImages(shopId: ID!, imageIds: [ID!]!): DeleteShopImagesResponse
}

type CreateShopResponse {
  shop: Shop
  message: Message!
}

type UpdateShopResponse {
  shop: Shop
  message: Message!
}

type DeleteShopResponse {
  message: Message!
}

type AddShopImagesResponse {
  message: Message!
}

type DeleteShopImagesResponse {
  message: Message!
}

type Shop {
  accountId: ID!
  shopId: ID!
  shopNumber: String!
  name: String!
  address: Address
  phone: Phone
  email: String
  image: [Image]
  isActive: Boolean
  createdAt: DateTime!
  updatedAt: DateTime!
}

input ShopInput {
  accountId: ID!
  name: String!
  address: AddressInput
  phone: PhoneInput
  email: String
}

input ShopUpdateInput {
  accountId: ID!
  shopId: ID!
  shopNumber: String!
  name: String
  address: AddressUpdateInput
  phone: PhoneInput
  email: String
}
