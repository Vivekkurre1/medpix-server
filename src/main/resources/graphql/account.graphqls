extend type Query {
  account(accountId: ID!): Account
}

extend type Mutation {
  createAccount(account: AccountInput!): CreateAccountResponse
  updateAccount(accountId: ID!, account: AccountInput!): UpdateAccountResponse
  updateAccountAddress(
    accountId: ID!
    address: AddressInput!
  ): UpdateAccountAddressResponse
  deleteAccount(accountId: ID!): DeleteAccountResponse
  login(email: String!, password: String!): LogInResponse
}

type CreateAccountResponse {
  message: String
  isIssue: IsIssue
}

type UpdateAccountResponse {
  message: String
  isIssue: IsIssue
}

type UpdateAccountAddressResponse {
  message: String
  isIssue: IsIssue
}

type DeleteAccountResponse {
  message: String
  isIssue: IsIssue
}

type Account {
  id: ID!
  name: String!
  email: String
  phone: String!
  status: boolean!
  address: Address
  role: Role
}

input AccountInput {
  name: String!
  email: String
  phone: String!
  address: AddressInput
}

type AccountResponse {
  account: Account
  isIssue: IsIssue
}

type LogInResponse {
  account: Account
  isIssue: IsIssue
  token: AuthToken
}

type AuthToken {
  sessionId: String!
  sessionToken: JwtToken!
  refreshToken: JwtToken
}

type JwtToken {
  tokenId: String!
  tokenValue: String!
  expiresAt: DateTime!
}

type Role {
  id: ID!
  name: String!
  description: String
}
